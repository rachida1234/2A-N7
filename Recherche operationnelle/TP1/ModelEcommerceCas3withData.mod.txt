#  GLPK model file created by SUN for RO teaching


###############################  Model ###############################



###############################  Sets  ###############################

set Magasins;
set Produits;
set Demandes;


################### Variables ###################

var Q{i in Produits,j in Magasins,k in Demandes}, integer >=0; 
# or binary ?; 

var FraisExpedition{k in Demandes, j in Magasins}, binary ; 

###################  Constants: Data to load   #########################

param cout{i in Magasins, j in Produits};
param stock{i in Magasins, j in Produits};
param SDemandes{i in Demandes, j in Produits};
param expeditionFixe{i in Demandes,j in Magasins};
param expeditionVariable{i in Demandes,j in Magasins};

################### Constraints ###################

s.t.stockdisponible{j in Produits, k in Magasins}:
 sum{i in Demandes} Q[j,k,i] <= stock[k,j];
 
s.t.QteVerifieePourUneDemande{j in Produits,i in Demandes}:
 SDemandes[i,j] = sum{k in Magasins} Q[j,k,i];

s.t.MinorationFrais{j in Magasins,i in Demandes}:
FraisExpedition[i,j] <= sum{k in Produits} Q[k,j,i] ;

s.t.MajorationFrais{j in Magasins,d in Demandes}:
  sum{i in Produits} Q[i,j,d]  <=  sum{i in Produits} stock[j,i]*FraisExpedition[d,j];


###### Objective ######

minimize Cout: 
	sum{i in Produits, j in Magasins,k in Demandes}Q[i,j,k]*(cout[j,i] + expeditionVariable[k,j])+sum{m in Magasins,d in Demandes}expeditionFixe[d,m]*FraisExpedition[d,m]; 


#default data

data;
set Magasins :=
M1
M2
M3;

set Produits:=
P1
P2;

set Demandes :=
D1
D2;

param SDemandes:P1 P2:=
D1  2 0
D2  1 3;

param cout: P1 P2 :=
M1  1  1
M2  2  3
M3  3  2;


param stock: P1 P2 :=
M1 2.5 1
M2 1 2
M3 2 1 ;

param expeditionFixe:M1 M2 M3:=
D1  110 90 100
D2  110 90 100;

param expeditionVariable:M1 M2 M3:=
D1  10 1 5
D2  2 20 10;

end;
